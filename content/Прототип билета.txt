Прототип билета

1 вопрос:
По какому принципу устроена очередь?
Ответ:
По принципу "Первый пришёл - первый вышел".
Объяснение:
Очередь устроена по принципу FIFO (First In First Out, “первый пришел — первый вышел”). 
Это значит, что удалить элемент можно только после того, как были убраны все ранее добавленные элементы.

2 вопрос:
Что такое дерево?
Ответ:
Дерево — структура данных, состоящая из узлов.
Объяснение:
Дерево — структура данных, состоящая из узлов. Ей присущи следующие свойства:
- Каждое дерево имеет корневой узел;
- Корневой узел имеет 0 или более дочерних узлов;
- Каждый дочерний узел имеет 0 или более дочерних узлов.

3 вопрос:
Что такое граф?
Ответ:
Граф - это топологичекая модель, которая состоит из множества вершин и множества соединяющих их рёбер.
Объяснение:
Граф — это совокупность узлов (вершин) и связей между ними (рёбер).
Графы можно поделить на 2 типа: ориентированные и неориентированные.
У неориентированных графов ребра между узлами не имеют какого-либо направления, тогда как у ребер в ориентированных графах оно есть.

4 вопрос:
Алгоритм сортировки пузырьком?
Ответ:
Алгоритм сортировки пузырьком состоит в повторяющихся проходах по сортируемому массиву. 
Объяснение:
Алгоритм сортировки пузырьком состоит в повторяющихся проходах по сортируемому массиву. 
На каждой итерации последовательно сравниваются соседние элементы, и, если порядок в паре неверный, то элементы меняют местами. 
За каждый проход по массиву как минимум один элемент встает на свое место, поэтому необходимо совершить не более n−1 проходов, чтобы отсортировать массив размером n

5 вопрос:
Сколько соединений существует в SQL?
Ответ:
4 соединения.
Объяснение:
SQL есть 4 типа соединения, а именно:
- Inner Join (Внутреннее соединение);
- Right Join (Правое соединение);
- Left Join (Левое соединение);
- Full Join (Полное соединение).

6 вопрос:
В чем разница между типом данных CHAR и VARCHAR в SQL?
Ответ:
Varchar используется для строк символов переменной длины, тогда как Char используется для строк фиксированной длины.
Объяснение:
И Char, и Varchar служат символьными типами данных.
Char(10) может хранить только 10 символов и не сможет хранить строку любой другой длины, 
тогда как varchar(10) может хранить строку любой длины до 10, т.е. например 6, 8 или 2.

7 вопрос:
Что такое ограничения (Constraints)?
Ответ:
Ограничения (constraints) используются для указания ограничения на тип данных таблицы. 
Объяснение:
Они могут быть указаны при создании или изменении таблицы. Пример ограничений:
- NOT NULL;
- CHECK;
- DEFAULT;
- UNIQUE;
- PRIMARY KEY;
- FOREIGN KEY.

8 вопрос:
Что вы подразумеваете под денормализацией?
Ответ:
Денормализация — техника, которая используется для преобразования из высших к низшим нормальным формам.
Объяснение:
Она помогает разработчикам баз данных повысить производительность всей инфраструктуры, поскольку вносит избыточность в таблицу. 
Она добавляет избыточные данные в таблицу, учитывая частые запросы к базе данных, которые объединяют данные из разных таблиц в одну таблицу.

9 вопрос:
Какие состояния файлов существуют в системе Git?
Ответ:
В Git'е файлы могут находиться в одном из трёх состояний: зафиксированном, изменённом и подготовленном. 
Объяснение:
"Зафиксированный" значит, что файл уже сохранён в вашей локальной базе. 
К изменённым относятся файлы, которые поменялись, но ещё не были зафиксированы. 
Подготовленные файлы — это изменённые файлы, отмеченные для включения в следующий коммит.
Таким образом, в проектах, использующих Git, есть три части: каталог Git'а (Git directory), 
рабочий каталог (working directory) и область подготовленных файлов (staging area).

10 вопрос:
Что такое ветка в Git?
Ответ:
Организованная система ссылок на коммиты.
Объяснение:
Ветка по умолчанию в Git'е называется master. Когда вы создаёте коммиты на начальном этапе,
вам дана ветка master, указывающая на последний сделанный коммит. 
При каждом новом коммите она сдвигается вперёд автоматически.
Ответвление от основной ветки осуществляется для работы с определенной фичей.

11 вопрос:
Разница между git и svn (если есть)?
Ответ:
Главное отличие Git от Subversion заключается в том, что Git — распределенная система контроля версий.
Объяснение:
- Сервер вообще не нужен. Можно работать локально.
- В отличие от Subversion, если сервер с «главным» репозиторием, куда пушат свои изменения все разработчики (хотя формально в Git нет никакого «главного» репозитория),
 вдруг прилег — ничего страшного. Делаем коммиты в локальный репозиторий и ждем, когда сервер вернется.
- Git дает нам нормальное шифрование «из коробки».
- Git не раскидывает по каталогам служебную информацию, вместо этого она хранится только в корне репозитория.

12 вопрос:
Для чего нужен SSH-ключ?
Ответ:
SSH-ключи используются для облегчённой авторизации на различных сервисах.
Объяснение:
SSH-ключ состоит из двух частей:
- id_rsa — закрытая часть, которая должна быть доступна только вам, ни кому и ни когда нельзя давать к ней доступ, 
  этот файл можно переносить с компа на ком. так чтобы был у вас был только 1 ключ, но тут свои риски, 
  например у вас в одном месте кто-то получил доступ к $HOME, следовательно все ваши аккаунты потенциально взломали;
- id_rsa.pub — открытая часть, бесполезна без закрытой, её можно показывать всем, можно даже повесить на своём сайте, 
  чтобы желающие дать вам доступ на свой сервер могли быстро добавить ваш открытый ключ в файл ~/.ssh/authorized_keys.

13 вопрос:
Что такое docstring?
Ответ:
Docstring в Python – это строка документации, которая описывает, что делает функция, метод, модуль или класс Python.
Объяснение:
Данная строка располагается в начале определения объекта и используется для генерации документации автоматически. 
В других словах, docstring используется для создания описания API и содержит информацию о том, как использовать функцию или метод, 
какие аргументы они принимают и какие значения возвращают.

14 вопрос:
Может ли быть индекс списка отрицательным?
Ответ:
Да
Объяснение:
Да, индекс списка может быть отрицательным. В таком случае, отрицательное значение считается от конца списка, 
где -1 соответствует последнему элементу, -2 — предпоследнему элементу и так далее.

15 вопрос:
Что значит конструкция pass?
Ответ:
Пустой оператор.
Объяснение:
В Python, pass является пустым оператором. Он используется там, где синтаксически требуется оператор, но никаких действий выполнять не нужно.
Например, это может быть полезно при написании заглушки функции, которая будет реализована позже, или в цикле, который ничего не должен делать на данной итерации.

16 вопрос:
Что такое *args и **kwargs в определении функции?
Ответ:
*args и **kwargs – это специальные параметры в Python, которые позволяют передавать переменное количество аргументов в функцию.
Объяснение:
Параметр *args используется для передачи переменного количества аргументов без ключевого слова. 
Он представляет собой кортеж из всех дополнительных аргументов, переданных функции.
Параметр **kwargs используется для передачи переменного количества именованных аргументов. 
Он представляет собой словарь из всех дополнительных именованных аргументов, переданных функции.

17 вопрос:
Сколько основных концепций ООП?
Ответ:
4.
Объяснение:
Основными концепциями ООП являются:
- Наследование;
- Инкапсуляция;
- Полиморфизм;
- Абстракция.

18 вопрос:
Сколькими типами может быть достигнута абстракция данных?
Ответ:
Двумя.
Объяснение:
Абстракция данных может быть достигнута двумя способами:
- Абстрактный класс;
- Абстрактный метод.

19 вопрос:
Что такое деструктор?
Ответ:
Деструктор – это метод, который вызывается автоматически при уничтожении объекта.
Объяснение:
Деструктор – это метод, который вызывается автоматически при уничтожении объекта.
Деструктор также восстанавливает пространство кучи, которое было выделено для уничтоженного объекта. 
Он также начинает закрывать файлы и соединения базы данных объекта и т. д.

20 вопрос:
Можете ли вы вызвать метод базового класса, не создавая его экземпляр?
Ответ:
Можем.
Объяснение:
Да, вы можете вызывать базовый класс без его инстанцирования, но есть некоторые условия, которые необходимо соблюдать:
- Метод должен быть статическим;
- Базовый класс наследуется каким-либо другим подклассом.






