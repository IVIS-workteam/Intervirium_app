Пртототип билета 

1 вопрос:
Что означает буква "а" в rgba?
Ответ:
Буква "а" в rgba обозначает альфа и представляет уровень непрозрачности цвета.
Объяснение:
В CSS rgba расшифровывается как красно-зелено-синяя альфа.
В то время как красный, зеленый и синий являются основными цветами 
и представлены числами от 0 до 255 (0 - это отсутствие цвета, а 255 - максимальное количество цвета), 
буква "а" в rgba обозначает альфа и представляет уровень непрозрачности цвета.
Альфа-значение - это число в диапазоне от 0,0 (полностью прозрачное) до 1,0 (полностью непрозрачное).

2 вопрос:
Что такое цвета CSS HSL?
Ответ:
HSL означает оттенок, насыщенность и светлоту. Это цветовая схема, которая поддерживается в CSS3.
Объяснение:
- Оттенок: Оттенок - это степень на цветовом круге от 0 до 360. 0 - красный, 120 - зеленый и 240 - синий;
- Насыщенность: Насыщенность - это процентное значение; 100% - это полный цвет, а 0% - оттенок серого;
- Светлота: Светлота также определяется в процентах; 0% - черный, 100% - белый, а 50% - нормальная светлота.

3 вопрос:
Что такое VH/VW в CSS?
Ответ:
VH и VW - это CSS-единицы, связанные с размером видового экрана.
Объяснение:
"VH" означает высоту окна просмотра, а "VW" - ширину окна просмотра, и они чрезвычайно полезны для создания адаптивного дизайна.

4 вопрос:
Что такое атрибуты в HTML?
Ответ:
Атрибуты предоставляют дополнительную информацию об элементах HTML.
Объяснение:
Они включены в открывающий тег и обычно представлены парами имя-значение, например, имя=”значение”.
Например, в <a href=”https://www.example.com”>Link</a>, href - это атрибут, указывающий URL ссылки.

5 вопрос:
Каково назначение тега <label>?
Ответ:
Тег <label> определяет метку для элемента <input>, улучшая доступность и удобство использования.
Объяснение:
Связать <label> с <input> можно с помощью атрибута for, который соответствует идентификатору <input>.

6 вопрос:
Какие преимущества предоставляют базы данных NoSQL для управления большими объемами данных?
Ответ:
Базы данных NoSQL предназначены для решения современных задач, связанных с объемом, скоростью и разнообразием данных.
Объяснение:
Они превосходно справляются с управлением огромными объемами данных в распределенных и масштабируемых средах, 
предлагая преимущества, превосходящие возможности традиционных реляционных баз данных для решения тех же задач.

7 вопрос:
Из множества баз данных NoSQL выберите самую простую.
Ответы:
- Документ
- Широкая колонна
- Ключ-значение ( правильный )
- Все вышеперечисленное
Объяснение:
Она считается самой простой базой данных NoSQL, поскольку хранит все элементы в виде имени атрибута (т. е. «ключа») 
и соответствующего ему значения, которое легко получить.

8 вопрос:
Выберите правильный пример хранилища с широкими столбцами.
Ответы:
- Riak
- MongoDB
- Cassandra ( правильный )
- Redits
Объяснение:
Базы данных, такие как Cassandra и HBase, эффективно обрабатывают запросы 
к огромным объемам данных и хранят их в виде столбцов, а не строк.

9 вопрос:
Какие параметры используются для распределения различных данных по нескольким серверам?
Ответы:
- Разбиение(Partitioning)
- Группирование(Bucketing)
- Сегментирование(Sharding)(правильный)
- Ни один из вышеперечисленных
Объяснение:
Сегментирование(Sharding) - популярный процесс, при котором ключ сегмента используется 
для разделения данных на диапазоны и распределения их по различным сегментам.

10 вопрос:
Выберите правильный тип базы данных NoSQL.
Ответы:
- JSON
- Документные базы данных(правильный)
- SQL
- Все вышеперечисленное
Объяснение:
В документных базах данных данные хранятся в виде значения ключа, 
где каждый ключ связан со сложной структурой данных (документом).

11 вопрос:
Что такое Git commit хэш?
Ответ:
Хэш Git commit - это уникальный идентификатор (SHA-1) для каждого commit-а.
Объяснение:
Это помогает ссылаться на конкретные commit-ы в репозитории и отслеживать их. 
Вы можете использовать его для извлечения или возврата к конкретному commit-у.

12 вопрос:
Что делает git ls-files?
Ответ:
Команда git ls-files выводит список всех файлов, которые в данный момент отслеживаются Git в репозитории.
Объяснение:
Она отображает файлы как в рабочем каталоге, так и в промежуточной области. 
Эта команда помогает определить, какие файлы отслеживаются и готовы к фиксации. 
Она не отображает неотслеживаемые файлы или файлы, игнорируемые .gitignore.

13 вопрос:
Как вы обрабатываете большие файлы с помощью Git?
Ответ:
Чтобы обрабатывать большие файлы с помощью Git, используйте Git LFS (Large File Storage).
Объяснение:
Он заменяет большие файлы в репозитории указателями, в то время как фактическое содержимое файла хранится во внешнем хранилище.

14 вопрос:
Что такое ‘bare repository’ в Git?
Ответ:
Bare repository в Git - это репозиторий, у которого нет рабочего каталога.
Объяснение:
Он содержит только данные Git, такие как ветки, теги и коммиты, без фактических файлов проекта. 
Bare repositories обычно используются в качестве удаленных хранилищ, куда другие разработчики вносят изменения.

15 вопрос:
Что такое Git reflog?
Ответ:
Git reflog отслеживает историю изменений в HEAD и ветвях, включая изменения, 
которые не являются частью истории commit-ов.
Объяснение:
Он позволяет восстанавливать потерянные commit-ы, предоставляя ссылки на предыдущие состояния.

16 вопрос:
Примитивные типы данных в JavaScript – что это?
Ответ:
Это фундаментальный тип данных: все, что не является объектом и ограничено представлением одного значения.
Объяснение:
Все примитивы неизменяемые (иммутабельные). 
В JS доступно 7 примитивов: undefined, null, boolean, string, number, bigint, symbol.

17 вопросов:
Что такое event bubbling и event capturing в JavaScript?
Ответ:
Это два механизма обработки событий в JS.
Объяснение:
При event bubbling событие в первую очередь обрабатывается на самом вложенном элементе, а во вторую – передается по цепочке родительских элементов. 
При event capturing происходит наоборот: событие сначала обрабатывается на верхнем родительском элементе, а далее уже передается к вложенному элементу.

18 вопрос:
Как проверить, является ли значение массивом?
Ответ:
Для этого следует использовать метод Array.isArray. 
Объяснение:
Он возвращает true, если переданный аргумент является массивом, и false в противном случае.

19 вопрос:
В чем разница между использованием «var», «let» и «const»?
Ответ:
Разница между ними в уровне охвата.
Объяснение:
Var – оператор переменных JS. Используется для объявления переменной и можно задавать ее значение. 
Const – идея константных функций. Она не позволяет функциям изменять объект, для которого они вызываются. 
Let – это сигнал о том, что переменная может быть переназначена.

20 вопрос:
Для чего используются операторы break и continue?
Ответ:
Эти два термина относятся к циклам и являются единственными операторами, которые могут прервать выполнение кода.
Объяснение:
Оператор break заставляет интерпретатор перейти в конец цикла или другой инструкции, а оператор continue прерывает одну итерацию и продолжает следующую в цикле.











