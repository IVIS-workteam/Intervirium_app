
Категории вопросов:


1)Junior Python:
- 1.1 Классические алгоритмы и структуры данных.
- 1.2 БД(Реляционные, Нереляционные).
- 1.3 Система контроля версий (git).
- 1.4 Язык программирования Python и его фреймворки.
- 1.5 Методологии разработки ПО (ООП, Scrum, Solid и т.д.).


2) Junior Golang:
- 2.1 Docker.
- 2.2 БД(MySQL, MongoDB, Redis, PostgreSQL).
- 2.3 Система контроля версий (git).
- 2.4 Язык программирования Go.
- 2.5 Методологии разработки ПО (ООП, Scrum, Solid и т.д.).


3) Junior C:
- 3.1 Классические алгоритмы и структуры данных.
- 3.2 Unix системы.
- 3.3 Система контроля версий (git).
- 3.4 Язык программирования C.
- 3.5 Методологии разработки ПО (ООП, структурное программирование).


4) Junior Java:
- 4.1 Классические алгоритмы и структуры данных.
- 4.2 БД(MySQL, PostgreSQ).
- 4.3 Система контроля версий (git).
- 4.4 Язык программирования Java и его фреймворки(Sprint).
- 4.5 Методологии разработки ПО (ООП, Scrum, Solid и т.д.).


5) Junior JS:
- 5.1 HTML и CSS.
- 5.2 БД(PostgreSQL, Redis, SQL/NoSQL).
- 5.3 Система контроля версий (git).
- 5.4 Язык программирования JavaScript, Node.js, Vue.js, Next.js.


6) Junior PHP:
- 6.1 Классические алгоритмы и структуры данных.
- 6.2 БД(Реляционные, Нереляционные).
- 6.3 PHP.
- 6.4 Docker.
- 6.5 Методологии разработки ПО (ООП, Scrum, Solid и т.д.).


7) Junior QA:
- 7.1 Ручное тестирование (функциональное, регрессионное, интеграционное).
- 7.2 Принципы разработки ПО и жизненный цикл приложения.
- 7.3 БД(Реляционные, Нереляционные).
- 7.4 Тест-кейсы (positive test cases, negative test cases, regression test cases).
- 7.5 Postman.


8) Junior Data Analyst:
- 8.1 БД(Реляционные, Нереляционные).
- 8.2 Система контроля версий (git).
- 8.3 Язык программирования Python (pandas, matplotlib, numpy).
- 8.4 Docker.
- 8.5 CI/CD.
