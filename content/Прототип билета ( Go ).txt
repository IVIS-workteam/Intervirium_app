Прототип билета

1 вопрос:
Что такое пространства имен в Docker?
Ответ:
Пространства имен Docker — это технология обеспечения изолированных рабочих пространств, известная как контейнер. 
Объяснение:
Пространства имен Docker — это технология обеспечения изолированных рабочих пространств, известная как контейнер. 
Как только контейнер запускается, создается набор пространств имен для этого контейнера. 
Они обеспечивают уровень изоляции для контейнеров, поскольку каждый контейнер работает в отдельном пространстве имен, 
с ограничением доступа к другим пространствам.

2 вопрос:
Что такое объекты Docker?
Ответ:
Под объектами понимают образы, сервисы и контейнеры.
Объяснение:
Образы — шаблоны с инструкциями только для чтения для создания контейнеров.
Контейнеры — запущенные экземпляры образов.
Сервисы — можно запустить несколько контейнеров поверх нескольких сервисов Docker, работающих совместно как swarm.

3 вопрос:
Что такое Dockerfile?
Ответ:
Dockerfile содержит инструкции для сборки образов, которые передаются в Docker. 
Объяснение:
Также его можно описать как текстовый документ, содержащий все возможные команды, 
с помощью которых пользователь, последовательно их запуская, может собрать образ.

4 вопрос:
Если вы остановите контейнер — потеряете данные?
Ответ:
Нет.
Объяснение:
Если контейнер Docker останавливается, потери данных не происходит, поскольку все данные, пишутся на диск приложением с единственной целью — хранение. 
Этот процесс повторяется до тех пор, пока контейнер не будет однозначно удален. 
Более того: файловая система контейнера хранит изменения даже после полной остановки контейнера.

5 вопрос:
Объясните конечную согласованность и ее роль в базах данных NoSQL?
Ответ:
Конечная согласованность в базах данных NoSQL означает гарантию того, что с течением времени и без дальнейших обновлений 
все копии или узлы придут в одинаковое состояние.
Объяснение:
Этот подход отличается от моделей немедленной согласованности, которые обычно предполагают более высокую задержку из-за 
необходимости синхронных обновлений, что приводит к свойствам ACID (атомарность, согласованность, изоляция, долговечность).

6 вопрос:
Перечислите некоторые базы данных NoSQL?
Ответ:
MongoDB, Couchbase, Redis, Cassandra.
Объяснение:
Базы данных NoSQL в первую очередь возникли как ответ на ограничения традиционных сред, ориентированных на SQL, в управлении большими объемами данных,
неструктурированными типами данных и высокоскоростными данными.
MongoDB и Couchbase, например, являются отличным выбором для Интернета и электронной коммерции, 
в то время как Redis идеально подходит для управления сложными структурами данных, 
а Cassandra специализируется на обработке неструктурированных данных. 
Каждая база данных NoSQL соответствует определенному набору требований и предпочтений.

7 вопрос:
Что такое синоним в SQL?
Ответ:
Синоним используется для присвоения разных имен одному и тому же объекту в базе данных.
Объяснение:
В случае переименования объекта или изменения схемы объекта существующие приложения могут продолжать использовать более старые имена из-за синонимов. 
Синоним должен ссылаться только на объект, а не на другой синоним. Кроме того, синонимы также могут использоваться для ссылок на объекты в разных 
базах данных или серверах, используя имена объектов, состоящие из 3 или 4 частей. 
У одного и того же объекта базы данных может быть много имен, если все они напрямую относятся к одному и тому же объекту базы данных. 

8 вопрос:
Равны ли NULL значения нулю?
Ответ:
Нет.
Объяснение:
NULL указывают на отсутствие символов, тогда как ноль - это числовое значение. 
Значения NULL возникают, когда символ недоступен или неизвестен. 
Значения NULL также не следует путать с пустым пространством, поскольку предполагается, что к пустому пространству 
не должны быть прикреплены какие-либо данные, в то время как значение NULL показывает запись данных без какого-либо присвоенного ей значения.

9 вопрос:
Что делает git clone?
Ответ:
Git clone создает копию удаленного репозитория на вашем локальном компьютере.
Объяснение:
Git clone загружает все файлы, ветки и историю, позволяя вам начать работу над проектом или внести в него свой вклад. 
С помощью git clone -b вы можете загружать отдельные ветки репозитория и работать с ними.

10 вопрос:
Что такое git add?
Ответ:
Команда git add помечает изменения в вашем проекте для следующего commit-а.
Объяснение:
Он сообщает Git, какие файлы следует включить в последующее обновление, подготавливая их к сохранению в репозитории.
Это первый шаг в записи изменений в репозиторий Git.

11 вопрос:
Какова цель команды git clean?
Ответ:
Команда git clean используется для удаления игнорируемых файлов из рабочего каталога репозитория Git.
Объяснение:
Цель команды - очистить рабочее пространство, удалив файлы, которые не сохраняются Git,
и проверив состояние очистки, в котором присутствуют только наблюдаемые файлы.

12 вопрос:
Что такое "git checkout"?
Ответ:
Функция "git checkout" помогает вам переключаться между ветвями или возвращать файлы в предыдущее состояние в Git.
Объяснение:
Теперь предлагается использовать "git switch" для изменения ветвей и "git restore" для возврата файлов. 
Эти команды в большей степени ориентированы на свои конкретные задачи для большей ясности и возможностей.

13 вопрос:
Что такое сериализация?
Ответ:
Сериализация — это преобразование объекта в какой-либо формат с тем, чтобы потом можно было восстановить из этого формата.
Объяснение:
ериализация — это преобразование объекта в какой-либо формат с тем, чтобы потом можно было восстановить из этого формата. 
Допустим, после передачи как набора байт по сети. Или сохранения в файл на диск.

14 вопрос:
Что такое рефлексия в go?
Ответ:
Рефлексия в Go реализована в пакете reflect и представляет собой механизм, позволяющий коду исследовать значения, 
типы и структуры во время выполнения, без заранее известной информации о них.
Объяснение:
Рефлексия полезна в ситуациях, когда нам нужно работать с данными неизвестного типа,
например, при сериализации/десериализации данных, реализации ORM систем и так далее.
С помощью рефлексии мы можем, например, определить тип переменной, прочитать и изменить её значения, вызвать методы динамически.
Это делает код более гибким, но следует использовать рефлексию осторожно, так как она может привести к сложному и трудночитаемому коду, 
а также снизить производительность.

15 вопрос:
Что из себя представляет стабы (stubs) и моки (mock) в контексте тестирования в Go?
Ответ:
Стабы (stubs) и моки (mocks) являются техниками, используемыми для изоляции тестируемого кода от внешних зависимостей во время тестирования в Go.
Объяснение:
Стабы — это фейковые объекты, которые предоставляют предопределенные ответы на вызовы методов во время тестирования.
Моки — это более продвинутые фейковые объекты, которые, кроме предоставления предопределенных ответов, также проверяют, 
как и когда методы были вызваны в тестах, что помогает в проверке взаимодействия между объектами.

16 вопрос:
Чем отличается int от uint?
Ответ:
int содержит диапазон от отрицательных значений до положительных. uint – это диапазон от 0 в сторону увеличения положительных значений.
Объяснение:
int64: –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807 ,
uint64: от 0 до 18 446 744 073 709 551 615.

17 вопрос:
Что такое Agile?
Ответ:
Agile — это итеративная методология управления проектами и разработки программного обеспечения, 
которая помогает организациям и командам оптимизировать проекты и повышать их ценность.
Объяснение:
Вместо того чтобы выпускать крупный релиз, гибкая команда выполняет работу небольшими управляемыми порциями. 
Регулярная оценка требований, методов и результатов позволяет командам естественным образом адаптироваться к изменениям.

18 вопрос:
Каковы артефакты процесса Scrum?
Ответ:
Product Backlog, Sprint Backlog, Product Increment.
Объяснение:
- Product Backlog: перечень действий, функций и исправлений, необходимых для создания продукта, на основе исследований и анализа.
- Sprint Backlog: это подмножество продуктового бэклога. Это отдельные задачи продуктового бэклога, разбитые на выполнимые задачи для достижения цели спринта.
- Product Increment: элементы бэклога продукта, завершенные в течение спринта, считаются результатами (инкрементами продукта).

19 вопрос:
Что такое многоуровневое наследование?
Ответ:
При многоуровневом наследовании производный класс наследует базовый класс, и этот производный класс служит базовым классом для других классов.
Объяснение:
Например, «мотоцикл» — это класс, который наследует класс «двухколёсные транспортные средства», являющийся подклассом класса «транспортные средства».

20 вопрос:
Что такое интерфейс?
Ответ:
Уникальный тип класса, известный как интерфейс, содержит методы, но не их определения.
Объяснение:
Внутри интерфейса разрешено только объявление метода. 
Вы не можете создавать объекты, используя интерфейс. 
Вместо этого вы должны использовать этот интерфейс и указать процедуры для этого.






